00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 12/04/2018 12:53:12

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      :
00000000                             3  * Written by :
00000000                             4  * Date       :
00000000                             5  * Description:
00000000                             6  *-----------------------------------------------------------
00001000                             7      ORG    $1000
00001000                             8  START:                  ; first instruction of program
00001000                             9  
00001000                            10      org $1000
00001000                            11  
00001000                            12  *-------------------------------------------------------
00001000                            13  *Choose to be Evil Crimson Wizard or the knights of Dio
00001000                            14  *-------------------------------------------------------
00001000                            15  
00001000                            16  *-------------------------------------------------------
00001000                            17  *Validation values to be used, modify as needed
00001000                            18  *Add additional validation values as required
00001000                            19  *-------------------------------------------------------
00001000  =00000000                 20  exit        EQU 0      used to exit assembly program
00001000  =00000064                 21  min_feed    EQU 100    min feed requirement
00001000  =00000001                 22  min_horses  EQU 1      min number of horses
00001000  =00000009                 23  max_horses  EQU 9      max number of horses
00001000  =00000006                 24  min_soldier EQU 6      min soldiers
00001000  =00000001                 25  min_charge  EQU 1      min rate of fuel use based of speed (oats for horses)
00001000  =00000005                 26  max_charge  EQU 5      max rate e.g. Flank       
00001000  =00000005                 27  hit_point   EQU 5      points accumilated on castle (objective) strike
00001000  =00000008                 28  miss_point  EQU 8      points deducted for ordinace miss
00001000                            29  
00001000  =00000000                 30  players_feed EQU 0      players current amount of feed
00001000                            31  
00001000  =00000064                 32  mine_loc    EQU 100    example for a hit
00001000                            33  
00001000                            34  
00001000                            35  *Start of Game
00001000                            36  start:
00001000  11FC 0064 4000            37      move.b  #100,$4000 put score/health in memory location $4000
00001006  47F8 4000                 38      lea     $4000,A3   assign address A3 to that memory location
0000100A                            39  
0000100A                            40  
0000100A  6100 1FFE                 41      bsr     welcome    branch to the welcome subroutine
0000100E  6100 2010                 42      bsr     input      branch to the input subroutine
00001012  6100 1FEC                 43      bsr     game       branch to the game subroutine
00001016                            44  *Game loop
00003000                            45      org     $3000      the rest of the program is to be located from 3000 onwards
00003000                            46  
00003000                            47  *-------------------------------------------------------
00003000                            48  *-------------------Game Subroutine---------------------
00003000                            49  *-------------------------------------------------------
00003000                            50  game:
00003000  6100 0034                 51      bsr     gameloop   branch to gameloop subroutine
00003004  4E75                      52      rts                return from game: subroutine
00003006                            53            
00003006                            54  end:
00003006  FFFF FFFF                 55      simhalt
0000300A                            56  
0000300A                            57  *-------------------------------------------------------
0000300A                            58  *-------------------Welcome Subroutine------------------
0000300A                            59  *-------------------------------------------------------
0000300A                            60  welcome:
0000300A  6100 01E6                 61      bsr     endl            branch to endl subroutine
0000300E  43F9 0000320B             62      lea     welcome_msg,A1  assign message to address register A1
00003014  103C 000E                 63      move.b  #14,D0          move literal 14 to DO
00003018  4E4F                      64      trap    #15             trap and interpret value in D0
0000301A  6100 01D6                 65      bsr     endl            branch to endl subroutine
0000301E  4E75                      66      rts                     return from welcome: subroutine
00003020                            67  
00003020                            68  *-------------------------------------------------------
00003020                            69  *---------Gameplay Input Values Subroutine--------------
00003020                            70  *-------------------------------------------------------    
00003020                            71  input:
00003020  6100 0072                 72      bsr     feed            branch to feed input subroutine
00003024  6100 009C                 73      bsr     horses          branch to ship input subroutine
00003028  6100 00B2                 74      bsr     rate            branch to rate (charging speed) input subroutine
0000302C  6100 00C8                 75      bsr     distance        branch to mission distance/location input subroutine
00003030  6100 00DE                 76      bsr     soldiers        branch to soldiers input subroutine
00003034  4E75                      77      rts
00003036                            78  
00003036                            79  *-------------------------------------------------------
00003036                            80  *----------------Gameloop (main loop)-------------------
00003036                            81  *------------------------------------------------------- 
00003036                            82  gameloop:
00003036  6100 0028                 83      bsr     update          branch to update game subroutine 
0000303A  6100 0188                 84      bsr     clear_screen    clears the screen         
0000303E  6100 003A                 85      bsr     draw            branch to draw screen subroutine
00003042  6100 0180                 86      bsr     clear_screen    clears the screen
00003046  6100 00E2                 87      bsr     gameplay        branch to gameplay subroutine
0000304A  6100 0178                 88      bsr     clear_screen    clears the screen
0000304E  6100 00F8                 89      bsr     hud             branch to display HUD subroutine
00003052  6100 0170                 90      bsr     clear_screen    clears the screen
00003056  6100 0178                 91      bsr     replay          branch to replay game subroutine
0000305A  6100 0168                 92      bsr     clear_screen    clears the screen
0000305E  4E75                      93      rts                     return from gameloop: subroutine
00003060                            94  
00003060                            95  *-------------------------------------------------------
00003060                            96  *---------------Update Mission Progress-----------------
00003060                            97  *  Move to battle location, engage enemy, fire and take
00003060                            98  *  fire, complete mission and return to base
00003060                            99  *------------------------------------------------------- 
00003060                           100  update:
00003060  6100 0190                101      bsr     endl            print a CR and LF
00003064  6100 0140                102      bsr     decorate        decorate with dots using a loop
00003068  43F9 000034B5            103      lea     update_msg,A1   
0000306E  103C 000E                104      move.b  #14,D0
00003072  4E4F                     105      trap    #15
00003074  6100 0130                106      bsr     decorate
00003078  4E75                     107      rts
0000307A                           108  *-------------------------------------------------------
0000307A                           109  *---------------Draw Mission Updates--------------------
0000307A                           110  * Draw the game progress information, status regarding
0000307A                           111  * mission
0000307A                           112  *------------------------------------------------------- 
0000307A                           113  draw:
0000307A  6100 0176                114      bsr     endl
0000307E  6100 0126                115      bsr     decorate
00003082  43F9 000034C7            116      lea     draw_msg,A1
00003088  103C 000E                117      move.b  #14,D0
0000308C  4E4F                     118      trap    #15
0000308E  6100 0116                119      bsr     decorate
00003092  4E75                     120      rts
00003094                           121  *-------------------------------------------------------
00003094                           122  *-----------------------Horse feed-----------------------
00003094                           123  * Input the feed load for each horse. Feed costs money
00003094                           124  * For an advanced mark you need to manage this resource
00003094                           125  *------------------------------------------------------- 
00003094                           126  feed:
00003094  6100 015C                127      bsr     endl
00003098  6100 010C                128      bsr     decorate
0000309C  43F9 0000329C            129      lea     feed_msg,A1
000030A2                           130      
000030A2  1638 0000                131      move.b  players_feed, d3
000030A6                           132      
000030A6  103C 000E                133      move.b  #14,D0
000030AA  4E4F                     134      trap    #15
000030AC                           135      
000030AC  103C 0004                136      move.b #4,D0
000030B0  4E4F                     137      trap    #15
000030B2                           138      
000030B2  1601                     139      move.b d1,d3
000030B4                           140      
000030B4  1203                     141      move.b d3,d1
000030B6                           142      
000030B6  303C 0003                143      move #3,d0
000030BA  4E4F                     144      trap #15
000030BC                           145      
000030BC  6100 00E8                146      bsr     decorate
000030C0  4E75                     147      rts
000030C2                           148  
000030C2                           149  *-------------------------------------------------------
000030C2                           150  *--------------------Horses Inventory---------------------
000030C2                           151  * Number of horses to be allocated to a mission 
000030C2                           152  *------------------------------------------------------- 
000030C2                           153  horses:
000030C2  6100 012E                154      bsr     endl
000030C6  6100 00DE                155      bsr     decorate
000030CA  43F9 000032E8            156      lea     horses_msg,A1
000030D0  103C 000E                157      move.b  #14,D0
000030D4  4E4F                     158      trap    #15
000030D6                           159      
000030D6  6100 00CE                160      bsr     decorate
000030DA  4E75                     161      rts
000030DC                           162  
000030DC                           163  *-------------------------------------------------------
000030DC                           164  *-------------------Horse(s) Charge Speed---------------
000030DC                           165  * horses speed to and from a mission
000030DC                           166  *------------------------------------------------------- 
000030DC                           167  rate:
000030DC  6100 0114                168      bsr     endl
000030E0  6100 00C4                169      bsr     decorate
000030E4  43F9 000032FC            170      lea     rate_msg,A1
000030EA  103C 000E                171      move.b  #14,D0
000030EE  4E4F                     172      trap    #15
000030F0  6100 00B4                173      bsr     decorate
000030F4  4E75                     174      rts
000030F6                           175  
000030F6                           176  *-------------------------------------------------------
000030F6                           177  *------------------Mission Distance---------------------
000030F6                           178  * Distance to battle location
000030F6                           179  *------------------------------------------------------- 
000030F6                           180  distance:
000030F6  6100 00FA                181      bsr     endl
000030FA  6100 00AA                182      bsr     decorate
000030FE  43F9 00003374            183      lea     distance_msg,A1
00003104  103C 000E                184      move.b  #14,D0
00003108  4E4F                     185      trap    #15
0000310A  6100 009A                186      bsr     decorate
0000310E  4E75                     187      rts
00003110                           188  
00003110                           189  *-------------------------------------------------------
00003110                           190  *-----------------------Soldiers----------------------
00003110                           191  * Number of soldiers
00003110                           192  *-------------------------------------------------------   
00003110                           193  soldiers:
00003110  6100 00E0                194      bsr     endl
00003114  6100 0090                195      bsr     decorate
00003118  43F9 0000341A            196      lea     soldiers_msg,A1
0000311E  103C 000E                197      move.b  #14,D0
00003122  4E4F                     198      trap    #15
00003124  6100 0080                199      bsr     decorate
00003128  4E75                     200      rts
0000312A                           201  
0000312A                           202  *-------------------------------------------------------
0000312A                           203  *---Game Play (Mission Progress, Battle Maneuvers)------
0000312A                           204  *------------------------------------------------------- 
0000312A                           205  gameplay:
0000312A  6100 00C6                206      bsr     endl
0000312E  6100 0076                207      bsr     decorate
00003132  43F9 000034A6            208      lea     gameplay_msg,A1
00003138  103C 000E                209      move.b  #14,D0
0000313C  4E4F                     210      trap    #15
0000313E  6100 0066                211      bsr     decorate
00003142  6100 0026                212      bsr     collision
00003146  4E75                     213      rts
00003148                           214  
00003148                           215  *-------------------------------------------------------
00003148                           216  *-----------------Heads Up Display (Score)--------------
00003148                           217  * Retrieves the score from memory location
00003148                           218  *-------------------------------------------------------   
00003148                           219  hud:
00003148                           220  
00003148  6100 00A8                221      bsr     endl
0000314C  6100 0058                222      bsr     decorate
00003150  43F9 00003513            223      lea     hud_msg,A1
00003156  103C 000E                224      move.b  #14,D0
0000315A  4E4F                     225      trap    #15
0000315C  1213                     226      move.b  (A3),D1     retrieve the value A3 point to and move to D1
0000315E  103C 0003                227      move.b  #3,D0       move literal 3 to D0
00003162  4E4F                     228      trap    #15         intrepret value in D0, which 3 which displays D1
00003164  6100 0040                229      bsr     decorate
00003168  4E75                     230      rts
0000316A                           231  
0000316A                           232  *-------------------------------------------------------
0000316A                           233  *-----------------------Taking Fire---------------------
0000316A                           234  * This could be used for collision detection, if 
0000316A                           235  *-------------------------------------------------------
0000316A                           236  collision:
0000316A  123C 0064                237      move.b  #mine_loc,D1
0000316E  B27C 0064                238      cmp     #100,D1 is( x == 100)?
00003172  6600 0010                239      bne     collision_miss if x is equal to 100, then hit
00003176                           240  collision_hit:
00003176                           241      *hit
00003176  43F9 000034D5            242      lea     hit_msg,A1
0000317C  303C 000E                243      move    #14,D0
00003180  4E4F                     244      trap    #15
00003182  4E75                     245      rts
00003184                           246      
00003184                           247  collision_miss:
00003184                           248      *miss
00003184  43F9 000034DD            249      lea     miss_msg,A1
0000318A  303C 000E                250      move    #14,D0
0000318E  4E4F                     251      trap    #15
00003190  4E75                     252      rts
00003192                           253  
00003192                           254  *-------------------------------------------------------
00003192                           255  *--------------------------Loop-------------------------
00003192                           256  *-------------------------------------------------------
00003192                           257  loop:
00003192  163C 0005                258      move.b  #5, D3 loop counter D3=5
00003196                           259  next:
00003196  43F9 000034E3            260      lea     loop_msg,A1
0000319C  103C 000E                261      move.b  #14,D0
000031A0  4E4F                     262      trap    #15
000031A2  5343                     263      sub     #1,D3   decrement loop counter
000031A4  66F0                     264      bne     next    repeat until D0=0
000031A6                           265  
000031A6                           266  *-------------------------------------------------------
000031A6                           267  *------------------Screen Decoration--------------------
000031A6                           268  *-------------------------------------------------------
000031A6                           269  decorate:
000031A6  163C 003C                270      move.b  #60, D3
000031AA  6100 0046                271      bsr     endl
000031AE                           272  out:
000031AE  43F9 000034E3            273      lea     loop_msg,A1
000031B4  103C 000E                274      move.b  #14,D0
000031B8  4E4F                     275      trap    #15
000031BA  5343                     276      sub     #1,D3   decrement loop counter
000031BC  66F0                     277      bne     out     repeat until D0=0
000031BE  6100 0032                278      bsr     endl
000031C2  4E75                     279      rts
000031C4                           280      
000031C4                           281  clear_screen: 
000031C4  103C 000B                282      move.b  #11,D0      clear screen
000031C8  323C FF00                283      move.w  #$ff00,D1
000031CC  4E4F                     284      trap    #15
000031CE  4E75                     285      rts
000031D0                           286  *-------------------------------------------------------
000031D0                           287  *------------------------Replay-------------------------
000031D0                           288  *-------------------------------------------------------
000031D0                           289  replay:
000031D0  6100 0020                290      bsr     endl
000031D4  43F9 000034E5            291      lea     replay_msg,A1
000031DA  103C 000E                292      move.b  #14,D0
000031DE  4E4F                     293      trap    #15
000031E0                           294      
000031E0  103C 0004                295      move.b  #4,D0
000031E4  4E4F                     296      trap    #15
000031E6                           297  
000031E6  B27C 0000                298      cmp     #exit,D1
000031EA  6700 FE1A                299      beq     end         if SR Z register contains 1 beq => Branch Equals
000031EE  6100 FE46                300      bsr     gameloop
000031F2                           301  
000031F2                           302  endl:
000031F2  48E7 8040                303      movem.l D0/A1,-(A7)
000031F6  303C 000E                304      move    #14,D0
000031FA  43F9 00003208            305      lea     crlf,A1
00003200  4E4F                     306      trap    #15
00003202  4CDF 0201                307      movem.l (A7)+,D0/A1
00003206  4E75                     308      rts
00003208                           309      
00003208                           310  *-------------------------------------------------------
00003208                           311  *-------------------Data Delarations--------------------
00003208                           312  *-------------------------------------------------------
00003208                           313  
00003208= 0D 0A 00                 314  crlf:           dc.b    $0D,$0A,0
0000320B= 2A 2A 2A 2A 2A 2A ...    315  welcome_msg:    dc.b    '************************************************************'
00003247= 0D 0A                    316                  dc.b    $0D,$0A
00003249= 43 61 73 74 6C 65 ...    317                  dc.b    'Castle botherers 7'
0000325B= 0D 0A                    318                  dc.b    $0D,$0A
0000325D= 2A 2A 2A 2A 2A 2A ...    319                  dc.b    '************************************************************'
00003299= 0D 0A 00                 320                  dc.b    $0D,$0A,0
0000329C= 46 65 65 64 20 6C ...    321  feed_msg:       dc.b    'Feed load (each horse needs at least 100 units of feed)'
000032D3= 0D 0A                    322                  dc.b    $0D,$0A
000032D5= 45 6E 74 65 72 20 ...    323                  dc.b    'Enter feed load : ',0
000032E8= 4E 75 6D 62 65 72 ...    324  horses_msg:      dc.b    'Number of horses : ',0
000032FC= 4F 6E 65 20 54 68 ...    325  rate_msg:       dc.b    'One Third[1], Two Thirds[2], Standard Charge[3], ' 
0000332D= 0D 0A                    326                  dc.b    $0D,$0A
0000332F= 46 75 6C 6C 20 43 ...    327                  dc.b    'Full Charge[4], Flank Charge[5] units feed per click'
00003363= 0D 0A                    328                  dc.b    $0D,$0A
00003365= 45 6E 74 65 72 20 ...    329                  dc.b    'Enter Speed : ',0
00003374= 4D 69 73 73 69 6F ...    330  distance_msg:   dc.b    'Mission distance e.g. 40 (with 100 units of feed  '
000033A6= 0D 0A                    331                  dc.b    $0D,$0A
000033A8= 4F 6E 65 20 54 68 ...    332                  dc.b    'One Third speed 20 units remain for manuvouirs) horses '
000033DF= 0D 0A                    333                  dc.b    $0D,$0A
000033E1= 48 6F 72 73 65 73 ...    334                  dc.b    'Horses without feed are lost.'
000033FE= 0D 0A                    335                  dc.b    $0D,$0A
00003400= 45 6E 74 65 72 20 ...    336                  dc.b    'Enter mission distance : ',0
0000341A= 45 61 63 68 20 68 ...    337  soldiers_msg:       dc.b    'Each horse needs at least 1 Knight and 1 Stable Hand'
0000344E= 0D 0A                    338                  dc.b    $0D,$0A
00003450= 6D 69 6E 69 6D 75 ...    339                  dc.b    'minimum requirement is 2 i.e. Stable Hand x 1 and Knight x 1.'
0000348D= 0D 0A                    340                  dc.b    $0D,$0A
0000348F= 45 6E 74 65 72 20 ...    341                  dc.b    'Enter # of soldiers : ',0
000034A6= 41 64 64 20 47 61 ...    342  gameplay_msg:   dc.b    'Add Gameplay !',0
000034B5= 55 70 64 61 74 65 ...    343  update_msg:     dc.b    'Update Gameplay !',0
000034C7= 44 72 61 77 20 53 ...    344  draw_msg:       dc.b    'Draw Screen !',0
000034D5= 53 74 72 69 6B 65 ...    345  hit_msg:        dc.b    'Strike!',0
000034DD= 4D 69 73 73 21 00        346  miss_msg:       dc.b    'Miss!',0
000034E3= 2E 00                    347  loop_msg:       dc.b    '.',0
000034E5= 45 6E 74 65 72 20 ...    348  replay_msg:     dc.b    'Enter 0 to Quit any other number to replay : ',0
00003513= 53 63 6F 72 65 20 ...    349  hud_msg:        dc.b    'Score : ',0
0000351C                           350  
0000351C                           351  health:     ds.w    1
0000351E                           352  score:      ds.w    1 reserve space for score
00003520                           353  
00003520                           354      end start

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
CLEAR_SCREEN        31C4
COLLISION           316A
COLLISION_HIT       3176
COLLISION_MISS      3184
CRLF                3208
DECORATE            31A6
DISTANCE            30F6
DISTANCE_MSG        3374
DRAW                307A
DRAW_MSG            34C7
END                 3006
ENDL                31F2
EXIT                0
FEED                3094
FEED_MSG            329C
GAME                3000
GAMELOOP            3036
GAMEPLAY            312A
GAMEPLAY_MSG        34A6
HEALTH              351C
HIT_MSG             34D5
HIT_POINT           5
HORSES              30C2
HORSES_MSG          32E8
HUD                 3148
HUD_MSG             3513
INPUT               3020
LOOP                3192
LOOP_MSG            34E3
MAX_CHARGE          5
MAX_HORSES          9
MINE_LOC            64
MIN_CHARGE          1
MIN_FEED            64
MIN_HORSES          1
MIN_SOLDIER         6
MISS_MSG            34DD
MISS_POINT          8
NEXT                3196
OUT                 31AE
PLAYERS_FEED        0
RATE                30DC
RATE_MSG            32FC
REPLAY              31D0
REPLAY_MSG          34E5
SCORE               351E
SOLDIERS            3110
SOLDIERS_MSG        341A
START               1000
UPDATE              3060
UPDATE_MSG          34B5
WELCOME             300A
WELCOME_MSG         320B
