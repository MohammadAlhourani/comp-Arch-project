00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 12/04/2018 13:21:54

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      :
00000000                             3  * Written by :
00000000                             4  * Date       :
00000000                             5  * Description:
00000000                             6  *-----------------------------------------------------------
00001000                             7      ORG    $1000
00001000                             8  START:                  ; first instruction of program
00001000                             9  
00001000                            10      org $1000
00001000                            11  
00001000                            12  *-------------------------------------------------------
00001000                            13  *Choose to be Evil Crimson Wizard or the knights of Dio
00001000                            14  *-------------------------------------------------------
00001000                            15  
00001000                            16  *-------------------------------------------------------
00001000                            17  *Validation values to be used, modify as needed
00001000                            18  *Add additional validation values as required
00001000                            19  *-------------------------------------------------------
00001000  =00000000                 20  exit        EQU 0      used to exit assembly program
00001000  =0000000A                 21  min_feed    EQU 10    min feed requirement
00001000  =00000001                 22  min_horses  EQU 1      min number of horses
00001000  =00000009                 23  max_horses  EQU 9      max number of horses
00001000  =00000006                 24  min_soldier EQU 6      min soldiers
00001000  =00000001                 25  min_charge  EQU 1      min rate of fuel use based of speed (oats for horses)
00001000  =00000005                 26  max_charge  EQU 5      max rate e.g. Flank       
00001000  =00000005                 27  hit_point   EQU 5      points accumilated on castle (objective) strike
00001000  =00000008                 28  miss_point  EQU 8      points deducted for ordinace miss
00001000                            29  
00001000  =00000064                 30  players_feed EQU 100      players current amount of feed
00001000  =000003E8                 31  players_cash equ 1000     players current amount of cash
00001000  =0000000A                 32  players_soldier EQU 10    players current amount of soldiers
00001000  =00000005                 33  players_horses EQU 5      player current amount of horss
00001000                            34  
00001000  =00000064                 35  mine_loc    EQU 100    example for a hit
00001000                            36  
00001000                            37  
00001000                            38  *Start of Game
00001000                            39  start:
00001000  11FC 0064 4000            40      move.b  #100,$4000 put score/health in memory location $4000
00001006  47F8 4000                 41      lea     $4000,A3   assign address A3 to that memory location
0000100A                            42  
0000100A                            43  
0000100A  6100 1FFE                 44      bsr     welcome    branch to the welcome subroutine
0000100E  6100 2010                 45      bsr     input      branch to the input subroutine
00001012  6100 1FEC                 46      bsr     game       branch to the game subroutine
00001016                            47  *Game loop
00003000                            48      org     $3000      the rest of the program is to be located from 3000 onwards
00003000                            49  
00003000                            50  *-------------------------------------------------------
00003000                            51  *-------------------Game Subroutine---------------------
00003000                            52  *-------------------------------------------------------
00003000                            53  game:
00003000  6100 0034                 54      bsr     gameloop   branch to gameloop subroutine
00003004  4E75                      55      rts                return from game: subroutine
00003006                            56            
00003006                            57  end:
00003006  FFFF FFFF                 58      simhalt
0000300A                            59  
0000300A                            60  *-------------------------------------------------------
0000300A                            61  *-------------------Welcome Subroutine------------------
0000300A                            62  *-------------------------------------------------------
0000300A                            63  welcome:
0000300A  6100 01E4                 64      bsr     endl            branch to endl subroutine
0000300E  43F9 00003209             65      lea     welcome_msg,A1  assign message to address register A1
00003014  103C 000E                 66      move.b  #14,D0          move literal 14 to DO
00003018  4E4F                      67      trap    #15             trap and interpret value in D0
0000301A  6100 01D4                 68      bsr     endl            branch to endl subroutine
0000301E  4E75                      69      rts                     return from welcome: subroutine
00003020                            70  
00003020                            71  *-------------------------------------------------------
00003020                            72  *---------Gameplay Input Values Subroutine--------------
00003020                            73  *-------------------------------------------------------    
00003020                            74  input:
00003020  6100 0072                 75      bsr     feed            branch to feed input subroutine
00003024  6100 009A                 76      bsr     horses          branch to ship input subroutine
00003028  6100 00B0                 77      bsr     rate            branch to rate (charging speed) input subroutine
0000302C  6100 00C6                 78      bsr     distance        branch to mission distance/location input subroutine
00003030  6100 00DC                 79      bsr     soldiers        branch to soldiers input subroutine
00003034  4E75                      80      rts
00003036                            81  
00003036                            82  *-------------------------------------------------------
00003036                            83  *----------------Gameloop (main loop)-------------------
00003036                            84  *------------------------------------------------------- 
00003036                            85  gameloop:
00003036  6100 0028                 86      bsr     update          branch to update game subroutine 
0000303A  6100 0186                 87      bsr     clear_screen    clears the screen         
0000303E  6100 003A                 88      bsr     draw            branch to draw screen subroutine
00003042  6100 017E                 89      bsr     clear_screen    clears the screen
00003046  6100 00E0                 90      bsr     gameplay        branch to gameplay subroutine
0000304A  6100 0176                 91      bsr     clear_screen    clears the screen
0000304E  6100 00F6                 92      bsr     hud             branch to display HUD subroutine
00003052  6100 016E                 93      bsr     clear_screen    clears the screen
00003056  6100 0176                 94      bsr     replay          branch to replay game subroutine
0000305A  6100 0166                 95      bsr     clear_screen    clears the screen
0000305E  4E75                      96      rts                     return from gameloop: subroutine
00003060                            97  
00003060                            98  *-------------------------------------------------------
00003060                            99  *---------------Update Mission Progress-----------------
00003060                           100  *  Move to battle location, engage enemy, fire and take
00003060                           101  *  fire, complete mission and return to base
00003060                           102  *------------------------------------------------------- 
00003060                           103  update:
00003060  6100 018E                104      bsr     endl            print a CR and LF
00003064  6100 013E                105      bsr     decorate        decorate with dots using a loop
00003068  43F9 000034B3            106      lea     update_msg,A1   
0000306E  103C 000E                107      move.b  #14,D0
00003072  4E4F                     108      trap    #15
00003074  6100 012E                109      bsr     decorate
00003078  4E75                     110      rts
0000307A                           111  *-------------------------------------------------------
0000307A                           112  *---------------Draw Mission Updates--------------------
0000307A                           113  * Draw the game progress information, status regarding
0000307A                           114  * mission
0000307A                           115  *------------------------------------------------------- 
0000307A                           116  draw:
0000307A  6100 0174                117      bsr     endl
0000307E  6100 0124                118      bsr     decorate
00003082  43F9 000034C5            119      lea     draw_msg,A1
00003088  103C 000E                120      move.b  #14,D0
0000308C  4E4F                     121      trap    #15
0000308E  6100 0114                122      bsr     decorate
00003092  4E75                     123      rts
00003094                           124  *-------------------------------------------------------
00003094                           125  *-----------------------Horse feed-----------------------
00003094                           126  * Input the feed load for each horse. Feed costs money
00003094                           127  * For an advanced mark you need to manage this resource
00003094                           128  *------------------------------------------------------- 
00003094                           129  feed:
00003094  6100 015A                130      bsr     endl
00003098  6100 010A                131      bsr     decorate
0000309C  43F9 0000329A            132      lea     feed_msg,A1
000030A2                           133      
000030A2  1638 0064                134      move.b  players_feed, d3
000030A6                           135      
000030A6  103C 000E                136      move.b  #14,D0
000030AA  4E4F                     137      trap    #15
000030AC                           138     
000030AC  1203                     139      move.b d3, d1
000030AE                           140      
000030AE  303C 0003                141      move #3,d0
000030B2  4E4F                     142      trap #15
000030B4                           143      
000030B4  303C 0009                144      move #9,d0
000030B8  4E4F                     145      trap #15
000030BA                           146  
000030BA                           147      
000030BA  6100 00E8                148      bsr     decorate
000030BE  4E75                     149      rts
000030C0                           150  
000030C0                           151  *-------------------------------------------------------
000030C0                           152  *--------------------Horses Inventory---------------------
000030C0                           153  * Number of horses to be allocated to a mission 
000030C0                           154  *------------------------------------------------------- 
000030C0                           155  horses:
000030C0  6100 012E                156      bsr     endl
000030C4  6100 00DE                157      bsr     decorate
000030C8  43F9 000032E6            158      lea     horses_msg,A1
000030CE  103C 000E                159      move.b  #14,D0
000030D2  4E4F                     160      trap    #15
000030D4                           161      
000030D4  6100 00CE                162      bsr     decorate
000030D8  4E75                     163      rts
000030DA                           164  
000030DA                           165  *-------------------------------------------------------
000030DA                           166  *-------------------Horse(s) Charge Speed---------------
000030DA                           167  * horses speed to and from a mission
000030DA                           168  *------------------------------------------------------- 
000030DA                           169  rate:
000030DA  6100 0114                170      bsr     endl
000030DE  6100 00C4                171      bsr     decorate
000030E2  43F9 000032FA            172      lea     rate_msg,A1
000030E8  103C 000E                173      move.b  #14,D0
000030EC  4E4F                     174      trap    #15
000030EE  6100 00B4                175      bsr     decorate
000030F2  4E75                     176      rts
000030F4                           177  
000030F4                           178  *-------------------------------------------------------
000030F4                           179  *------------------Mission Distance---------------------
000030F4                           180  * Distance to battle location
000030F4                           181  *------------------------------------------------------- 
000030F4                           182  distance:
000030F4  6100 00FA                183      bsr     endl
000030F8  6100 00AA                184      bsr     decorate
000030FC  43F9 00003372            185      lea     distance_msg,A1
00003102  103C 000E                186      move.b  #14,D0
00003106  4E4F                     187      trap    #15
00003108  6100 009A                188      bsr     decorate
0000310C  4E75                     189      rts
0000310E                           190  
0000310E                           191  *-------------------------------------------------------
0000310E                           192  *-----------------------Soldiers----------------------
0000310E                           193  * Number of soldiers
0000310E                           194  *-------------------------------------------------------   
0000310E                           195  soldiers:
0000310E  6100 00E0                196      bsr     endl
00003112  6100 0090                197      bsr     decorate
00003116  43F9 00003418            198      lea     soldiers_msg,A1
0000311C  103C 000E                199      move.b  #14,D0
00003120  4E4F                     200      trap    #15
00003122  6100 0080                201      bsr     decorate
00003126  4E75                     202      rts
00003128                           203  
00003128                           204  *-------------------------------------------------------
00003128                           205  *---Game Play (Mission Progress, Battle Maneuvers)------
00003128                           206  *------------------------------------------------------- 
00003128                           207  gameplay:
00003128  6100 00C6                208      bsr     endl
0000312C  6100 0076                209      bsr     decorate
00003130  43F9 000034A4            210      lea     gameplay_msg,A1
00003136  103C 000E                211      move.b  #14,D0
0000313A  4E4F                     212      trap    #15
0000313C  6100 0066                213      bsr     decorate
00003140  6100 0026                214      bsr     collision
00003144  4E75                     215      rts
00003146                           216  
00003146                           217  *-------------------------------------------------------
00003146                           218  *-----------------Heads Up Display (Score)--------------
00003146                           219  * Retrieves the score from memory location
00003146                           220  *-------------------------------------------------------   
00003146                           221  hud:
00003146                           222  
00003146  6100 00A8                223      bsr     endl
0000314A  6100 0058                224      bsr     decorate
0000314E  43F9 00003511            225      lea     hud_msg,A1
00003154  103C 000E                226      move.b  #14,D0
00003158  4E4F                     227      trap    #15
0000315A  1213                     228      move.b  (A3),D1     retrieve the value A3 point to and move to D1
0000315C  103C 0003                229      move.b  #3,D0       move literal 3 to D0
00003160  4E4F                     230      trap    #15         intrepret value in D0, which 3 which displays D1
00003162  6100 0040                231      bsr     decorate
00003166  4E75                     232      rts
00003168                           233  
00003168                           234  *-------------------------------------------------------
00003168                           235  *-----------------------Taking Fire---------------------
00003168                           236  * This could be used for collision detection, if 
00003168                           237  *-------------------------------------------------------
00003168                           238  collision:
00003168  123C 0064                239      move.b  #mine_loc,D1
0000316C  B27C 0064                240      cmp     #100,D1 is( x == 100)?
00003170  6600 0010                241      bne     collision_miss if x is equal to 100, then hit
00003174                           242  collision_hit:
00003174                           243      *hit
00003174  43F9 000034D3            244      lea     hit_msg,A1
0000317A  303C 000E                245      move    #14,D0
0000317E  4E4F                     246      trap    #15
00003180  4E75                     247      rts
00003182                           248      
00003182                           249  collision_miss:
00003182                           250      *miss
00003182  43F9 000034DB            251      lea     miss_msg,A1
00003188  303C 000E                252      move    #14,D0
0000318C  4E4F                     253      trap    #15
0000318E  4E75                     254      rts
00003190                           255  
00003190                           256  *-------------------------------------------------------
00003190                           257  *--------------------------Loop-------------------------
00003190                           258  *-------------------------------------------------------
00003190                           259  loop:
00003190  163C 0005                260      move.b  #5, D3 loop counter D3=5
00003194                           261  next:
00003194  43F9 000034E1            262      lea     loop_msg,A1
0000319A  103C 000E                263      move.b  #14,D0
0000319E  4E4F                     264      trap    #15
000031A0  5343                     265      sub     #1,D3   decrement loop counter
000031A2  66F0                     266      bne     next    repeat until D0=0
000031A4                           267  
000031A4                           268  *-------------------------------------------------------
000031A4                           269  *------------------Screen Decoration--------------------
000031A4                           270  *-------------------------------------------------------
000031A4                           271  decorate:
000031A4  163C 003C                272      move.b  #60, D3
000031A8  6100 0046                273      bsr     endl
000031AC                           274  out:
000031AC  43F9 000034E1            275      lea     loop_msg,A1
000031B2  103C 000E                276      move.b  #14,D0
000031B6  4E4F                     277      trap    #15
000031B8  5343                     278      sub     #1,D3   decrement loop counter
000031BA  66F0                     279      bne     out     repeat until D0=0
000031BC  6100 0032                280      bsr     endl
000031C0  4E75                     281      rts
000031C2                           282      
000031C2                           283  clear_screen: 
000031C2  103C 000B                284      move.b  #11,D0      clear screen
000031C6  323C FF00                285      move.w  #$ff00,D1
000031CA  4E4F                     286      trap    #15
000031CC  4E75                     287      rts
000031CE                           288  *-------------------------------------------------------
000031CE                           289  *------------------------Replay-------------------------
000031CE                           290  *-------------------------------------------------------
000031CE                           291  replay:
000031CE  6100 0020                292      bsr     endl
000031D2  43F9 000034E3            293      lea     replay_msg,A1
000031D8  103C 000E                294      move.b  #14,D0
000031DC  4E4F                     295      trap    #15
000031DE                           296      
000031DE  103C 0004                297      move.b  #4,D0
000031E2  4E4F                     298      trap    #15
000031E4                           299  
000031E4  B27C 0000                300      cmp     #exit,D1
000031E8  6700 FE1C                301      beq     end         if SR Z register contains 1 beq => Branch Equals
000031EC  6100 FE48                302      bsr     gameloop
000031F0                           303  
000031F0                           304  endl:
000031F0  48E7 8040                305      movem.l D0/A1,-(A7)
000031F4  303C 000E                306      move    #14,D0
000031F8  43F9 00003206            307      lea     crlf,A1
000031FE  4E4F                     308      trap    #15
00003200  4CDF 0201                309      movem.l (A7)+,D0/A1
00003204  4E75                     310      rts
00003206                           311      
00003206                           312  *-------------------------------------------------------
00003206                           313  *-------------------Data Delarations--------------------
00003206                           314  *-------------------------------------------------------
00003206                           315  
00003206= 0D 0A 00                 316  crlf:           dc.b    $0D,$0A,0
00003209= 2A 2A 2A 2A 2A 2A ...    317  welcome_msg:    dc.b    '************************************************************'
00003245= 0D 0A                    318                  dc.b    $0D,$0A
00003247= 43 61 73 74 6C 65 ...    319                  dc.b    'Castle botherers 7'
00003259= 0D 0A                    320                  dc.b    $0D,$0A
0000325B= 2A 2A 2A 2A 2A 2A ...    321                  dc.b    '************************************************************'
00003297= 0D 0A 00                 322                  dc.b    $0D,$0A,0
0000329A= 46 65 65 64 20 6C ...    323  feed_msg:       dc.b    'Feed load (each horse needs at least 100 units of feed)'
000032D1= 0D 0A                    324                  dc.b    $0D,$0A
000032D3= 45 6E 74 65 72 20 ...    325                  dc.b    'Enter feed load : ',0
000032E6= 4E 75 6D 62 65 72 ...    326  horses_msg:      dc.b    'Number of horses : ',0
000032FA= 4F 6E 65 20 54 68 ...    327  rate_msg:       dc.b    'One Third[1], Two Thirds[2], Standard Charge[3], ' 
0000332B= 0D 0A                    328                  dc.b    $0D,$0A
0000332D= 46 75 6C 6C 20 43 ...    329                  dc.b    'Full Charge[4], Flank Charge[5] units feed per click'
00003361= 0D 0A                    330                  dc.b    $0D,$0A
00003363= 45 6E 74 65 72 20 ...    331                  dc.b    'Enter Speed : ',0
00003372= 4D 69 73 73 69 6F ...    332  distance_msg:   dc.b    'Mission distance e.g. 40 (with 100 units of feed  '
000033A4= 0D 0A                    333                  dc.b    $0D,$0A
000033A6= 4F 6E 65 20 54 68 ...    334                  dc.b    'One Third speed 20 units remain for manuvouirs) horses '
000033DD= 0D 0A                    335                  dc.b    $0D,$0A
000033DF= 48 6F 72 73 65 73 ...    336                  dc.b    'Horses without feed are lost.'
000033FC= 0D 0A                    337                  dc.b    $0D,$0A
000033FE= 45 6E 74 65 72 20 ...    338                  dc.b    'Enter mission distance : ',0
00003418= 45 61 63 68 20 68 ...    339  soldiers_msg:       dc.b    'Each horse needs at least 1 Knight and 1 Stable Hand'
0000344C= 0D 0A                    340                  dc.b    $0D,$0A
0000344E= 6D 69 6E 69 6D 75 ...    341                  dc.b    'minimum requirement is 2 i.e. Stable Hand x 1 and Knight x 1.'
0000348B= 0D 0A                    342                  dc.b    $0D,$0A
0000348D= 45 6E 74 65 72 20 ...    343                  dc.b    'Enter # of soldiers : ',0
000034A4= 41 64 64 20 47 61 ...    344  gameplay_msg:   dc.b    'Add Gameplay !',0
000034B3= 55 70 64 61 74 65 ...    345  update_msg:     dc.b    'Update Gameplay !',0
000034C5= 44 72 61 77 20 53 ...    346  draw_msg:       dc.b    'Draw Screen !',0
000034D3= 53 74 72 69 6B 65 ...    347  hit_msg:        dc.b    'Strike!',0
000034DB= 4D 69 73 73 21 00        348  miss_msg:       dc.b    'Miss!',0
000034E1= 2E 00                    349  loop_msg:       dc.b    '.',0
000034E3= 45 6E 74 65 72 20 ...    350  replay_msg:     dc.b    'Enter 0 to Quit any other number to replay : ',0
00003511= 53 63 6F 72 65 20 ...    351  hud_msg:        dc.b    'Score : ',0
0000351A                           352  
0000351A                           353  health:     ds.w    1
0000351C                           354  score:      ds.w    1 reserve space for score
0000351E                           355  
0000351E                           356      end start

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
CLEAR_SCREEN        31C2
COLLISION           3168
COLLISION_HIT       3174
COLLISION_MISS      3182
CRLF                3206
DECORATE            31A4
DISTANCE            30F4
DISTANCE_MSG        3372
DRAW                307A
DRAW_MSG            34C5
END                 3006
ENDL                31F0
EXIT                0
FEED                3094
FEED_MSG            329A
GAME                3000
GAMELOOP            3036
GAMEPLAY            3128
GAMEPLAY_MSG        34A4
HEALTH              351A
HIT_MSG             34D3
HIT_POINT           5
HORSES              30C0
HORSES_MSG          32E6
HUD                 3146
HUD_MSG             3511
INPUT               3020
LOOP                3190
LOOP_MSG            34E1
MAX_CHARGE          5
MAX_HORSES          9
MINE_LOC            64
MIN_CHARGE          1
MIN_FEED            A
MIN_HORSES          1
MIN_SOLDIER         6
MISS_MSG            34DB
MISS_POINT          8
NEXT                3194
OUT                 31AC
PLAYERS_CASH        3E8
PLAYERS_FEED        64
PLAYERS_HORSES      5
PLAYERS_SOLDIER     A
RATE                30DA
RATE_MSG            32FA
REPLAY              31CE
REPLAY_MSG          34E3
SCORE               351C
SOLDIERS            310E
SOLDIERS_MSG        3418
START               1000
UPDATE              3060
UPDATE_MSG          34B3
WELCOME             300A
WELCOME_MSG         3209
