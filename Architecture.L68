00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 15/04/2018 17:02:48

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      :
00000000                             3  * Written by :
00000000                             4  * Date       :
00000000                             5  * Description:
00000000                             6  *-----------------------------------------------------------
00001000                             7      ORG    $1000
00001000                             8  START:                  ; first instruction of program
00001000                             9  
00001000                            10      org $1000
00001000                            11  
00001000                            12  *-------------------------------------------------------
00001000                            13  *Choose to be Evil Wizard or the noobs
00001000                            14  *-------------------------------------------------------
00001000                            15  
00001000                            16  *-------------------------------------------------------
00001000                            17  *Validation values to be used, modify as needed
00001000                            18  *Add additional validation values as required
00001000                            19  *-------------------------------------------------------
00001000  =00000000                 20  exit        EQU 0      used to exit assembly program
00001000  =0000000A                 21  min_feed    EQU 10    min feed requirement
00001000  =00000001                 22  min_horses  EQU 1      min number of horses
00001000  =00000009                 23  max_horses  EQU 9      max number of horses
00001000  =00000006                 24  min_soldier EQU 6      min soldiers
00001000  =00000001                 25  min_charge  EQU 1      min rate of fuel use based of speed (oats for horses)
00001000  =00000005                 26  max_charge  EQU 5      max rate e.g. Flank       
00001000  =00000005                 27  hit_point   EQU 5      points accumilated on castle (objective) strike
00001000  =00000008                 28  miss_point  EQU 8      points deducted for ordinace miss
00001000                            29  
00001000  =00000064                 30  players_feed EQU 100      players current amount of feed
00001000  =000003E8                 31  players_cash equ 1000     players current amount of cash
00001000  =0000000A                 32  players_soldier EQU 10    players current amount of soldiers
00001000  =00000005                 33  players_horses EQU 5      player current amount of horss
00001000                            34  
00001000  =00000032                 35  distance_to_mission EQU 50 distance to th mission
00001000                            36  
00001000  =00000064                 37  mine_loc    EQU 100    example for a hit
00001000                            38  
00001000                            39  
00001000                            40  *Start of Game
00001000                            41  start:
00001000  11FC 0064 4000            42      move.b  #100,$4000 put score/health in memory location $4000
00001006  47F8 4000                 43      lea     $4000,A3   assign address A3 to that memory location
0000100A                            44  
0000100A                            45  
0000100A  6100 1FFE                 46      bsr     welcome    branch to the welcome subroutine
0000100E  6100 2010                 47      bsr     input      branch to the input subroutine
00001012  6100 1FEC                 48      bsr     game       branch to the game subroutine
00001016                            49  *Game loop
00003000                            50      org     $3000      the rest of the program is to be located from 3000 onwards
00003000                            51  
00003000                            52  *-------------------------------------------------------
00003000                            53  *-------------------Game Subroutine---------------------
00003000                            54  *-------------------------------------------------------
00003000                            55  game:
00003000  6100 0030                 56      bsr     gameloop   branch to gameloop subroutine
00003004  4E75                      57      rts                return from game: subroutine
00003006                            58            
00003006                            59  end:
00003006  FFFF FFFF                 60      simhalt
0000300A                            61  
0000300A                            62  *-------------------------------------------------------
0000300A                            63  *-------------------Welcome Subroutine------------------
0000300A                            64  *-------------------------------------------------------
0000300A                            65  welcome:
0000300A  6100 01EA                 66      bsr     endl            branch to endl subroutine
0000300E  43F9 0000320F             67      lea     welcome_msg,A1  assign message to address register A1
00003014  103C 000E                 68      move.b  #14,D0          move literal 14 to DO
00003018  4E4F                      69      trap    #15             trap and interpret value in D0
0000301A  6100 01DA                 70      bsr     endl            branch to endl subroutine
0000301E  4E75                      71      rts                     return from welcome: subroutine
00003020                            72  
00003020                            73  *-------------------------------------------------------
00003020                            74  *---------Gameplay Input Values Subroutine--------------
00003020                            75  *-------------------------------------------------------    
00003020                            76  input:
00003020  6100 0062                 77      bsr     feed            branch to feed input subroutine
00003024  6100 008A                 78      bsr     horses          branch to ship input subroutine
00003028  6100 00B2                 79      bsr     distance        branch to mission distance/location input subroutine
0000302C  6100 00DA                 80      bsr     soldiers        branch to soldiers input subroutine
00003030  4E75                      81      rts
00003032                            82  
00003032                            83  *-------------------------------------------------------
00003032                            84  *----------------Gameloop (main loop)-------------------
00003032                            85  *------------------------------------------------------- 
00003032                            86  gameloop:
00003032  6100 0028                 87      bsr     update          branch to update game subroutine 
00003036  6100 0190                 88      bsr     clear_screen    clears the screen         
0000303A  6100 0034                 89      bsr     draw            branch to draw screen subroutine
0000303E  6100 0188                 90      bsr     clear_screen    clears the screen
00003042  6100 00F0                 91      bsr     gameplay        branch to gameplay subroutine
00003046  6100 0180                 92      bsr     clear_screen    clears the screen
0000304A  6100 0100                 93      bsr     hud             branch to display HUD subroutine
0000304E  6100 0178                 94      bsr     clear_screen    clears the screen
00003052  6100 0180                 95      bsr     replay          branch to replay game subroutine
00003056  6100 0170                 96      bsr     clear_screen    clears the screen
0000305A  4E75                      97      rts                     return from gameloop: subroutine
0000305C                            98  
0000305C                            99  *-------------------------------------------------------
0000305C                           100  *---------------Update Mission Progress-----------------
0000305C                           101  *  Move to battle location, engage enemy, fire and take
0000305C                           102  *  fire, complete mission and return to base
0000305C                           103  *------------------------------------------------------- 
0000305C                           104  update:
0000305C  6100 0198                105      bsr     endl            print a CR and LF
00003060  6100 0148                106      bsr     decorate        decorate with dots using a loop  
00003064  103C 000E                107      move.b  #14,D0
00003068  4E4F                     108      trap    #15
0000306A  6100 013E                109      bsr     decorate
0000306E  4E75                     110      rts
00003070                           111  *-------------------------------------------------------
00003070                           112  *---------------Draw Mission Updates--------------------
00003070                           113  * Draw the game progress information, status regarding
00003070                           114  * mission
00003070                           115  *------------------------------------------------------- 
00003070                           116  draw:
00003070  6100 0184                117      bsr     endl
00003074  6100 0134                118      bsr     decorate
00003078  103C 000E                119      move.b  #14,D0
0000307C  4E4F                     120      trap    #15
0000307E  6100 012A                121      bsr     decorate
00003082  4E75                     122      rts
00003084                           123  *-------------------------------------------------------
00003084                           124  *-----------------------Horse feed-----------------------
00003084                           125  * Input the feed load for each horse. Feed costs money
00003084                           126  * For an advanced mark you need to manage this resource
00003084                           127  *------------------------------------------------------- 
00003084                           128  feed:
00003084  6100 0170                129      bsr     endl
00003088  6100 0120                130      bsr     decorate
0000308C  43F9 00003299            131      lea     feed_msg,A1
00003092                           132      
00003092  143C 0064                133      move.b  #players_feed, d2
00003096                           134      
00003096  103C 000E                135      move.b  #14,D0
0000309A  4E4F                     136      trap    #15
0000309C                           137     
0000309C  1202                     138      move.b d2, d1
0000309E                           139      
0000309E  303C 0003                140      move #3,d0
000030A2  4E4F                     141      trap #15
000030A4                           142      
000030A4  303C 0004                143      move #4,d0
000030A8  4E4F                     144      trap #15
000030AA                           145  
000030AA                           146      
000030AA  6100 00FE                147      bsr     decorate
000030AE  4E75                     148      rts
000030B0                           149  
000030B0                           150  *-------------------------------------------------------
000030B0                           151  *--------------------Horses Inventory---------------------
000030B0                           152  * Number of horses to be allocated to a mission 
000030B0                           153  *------------------------------------------------------- 
000030B0                           154  horses:
000030B0  6100 0144                155      bsr     endl
000030B4  6100 00F4                156      bsr     decorate
000030B8  43F9 000032E8            157      lea     horses_msg,A1
000030BE                           158      
000030BE  163C 0005                159      move.b  #players_horses, d3
000030C2                           160      
000030C2  103C 000E                161      move.b  #14,D0
000030C6  4E4F                     162      trap    #15
000030C8                           163     
000030C8  1203                     164      move.b d3, d1
000030CA                           165      
000030CA  303C 0003                166      move #3,d0
000030CE  4E4F                     167      trap #15
000030D0                           168      
000030D0  303C 0004                169      move #4,d0
000030D4  4E4F                     170      trap #15
000030D6                           171      
000030D6  6100 00D2                172      bsr     decorate
000030DA  4E75                     173      rts
000030DC                           174  
000030DC                           175  
000030DC                           176  *-------------------------------------------------------
000030DC                           177  *------------------Mission Distance---------------------
000030DC                           178  * Distance to battle location
000030DC                           179  *------------------------------------------------------- 
000030DC                           180  distance:
000030DC  6100 0118                181      bsr     endl
000030E0  6100 00C8                182      bsr     decorate
000030E4  43F9 000032FC            183      lea     distance_msg,A1
000030EA                           184      
000030EA  1C3C 0032                185      move.b  #distance_to_mission, d6
000030EE                           186      
000030EE  103C 000E                187      move.b  #14,D0
000030F2  4E4F                     188      trap    #15
000030F4                           189     
000030F4  1206                     190      move.b d6, d1
000030F6                           191      
000030F6  303C 0003                192      move #3,d0
000030FA  4E4F                     193      trap #15
000030FC                           194      
000030FC  303C 0004                195      move #4,d0
00003100  4E4F                     196      trap #15
00003102                           197  
00003102  6100 00A6                198      bsr     decorate
00003106  4E75                     199      rts
00003108                           200  
00003108                           201  *-------------------------------------------------------
00003108                           202  *-----------------------Soldiers----------------------
00003108                           203  * Number of soldiers
00003108                           204  *-------------------------------------------------------   
00003108                           205  soldiers:
00003108  6100 00EC                206      bsr     endl
0000310C  6100 009C                207      bsr     decorate
00003110  43F9 00003368            208      lea     soldiers_msg,A1
00003116                           209      
00003116  1A3C 000A                210      move.b  #players_soldier, d5
0000311A                           211      
0000311A  103C 000E                212      move.b  #14,D0
0000311E  4E4F                     213      trap    #15
00003120                           214     
00003120  1205                     215      move.b d5, d1
00003122                           216      
00003122  303C 0003                217      move #3,d0
00003126  4E4F                     218      trap #15
00003128                           219      
00003128  303C 0004                220      move #4,d0
0000312C  4E4F                     221      trap #15
0000312E                           222  
0000312E  6100 007A                223      bsr     decorate
00003132  4E75                     224      rts
00003134                           225  
00003134                           226  *-------------------------------------------------------
00003134                           227  *---Game Play (Mission Progress, Battle Maneuvers)------
00003134                           228  *------------------------------------------------------- 
00003134                           229  gameplay:
00003134  6100 00C0                230      bsr     endl
00003138  6100 0070                231      bsr     decorate
0000313C                           232  
0000313C  103C 000E                233      move.b  #14,D0
00003140  4E4F                     234      trap    #15
00003142  6100 0066                235      bsr     decorate
00003146  6100 0026                236      bsr     collision
0000314A  4E75                     237      rts
0000314C                           238  
0000314C                           239  *-------------------------------------------------------
0000314C                           240  *-----------------Heads Up Display (Score)--------------
0000314C                           241  * Retrieves the score from memory location
0000314C                           242  *-------------------------------------------------------   
0000314C                           243  hud:
0000314C                           244  
0000314C  6100 00A8                245      bsr     endl
00003150  6100 0058                246      bsr     decorate
00003154  43F9 000033C5            247      lea     hud_msg,A1
0000315A  103C 000E                248      move.b  #14,D0
0000315E  4E4F                     249      trap    #15
00003160  1213                     250      move.b  (A3),D1     retrieve the value A3 point to and move to D1
00003162  103C 0003                251      move.b  #3,D0       move literal 3 to D0
00003166  4E4F                     252      trap    #15         intrepret value in D0, which 3 which displays D1
00003168  6100 0040                253      bsr     decorate
0000316C  4E75                     254      rts
0000316E                           255  
0000316E                           256  *-------------------------------------------------------
0000316E                           257  *-----------------------Taking Fire---------------------
0000316E                           258  * This could be used for collision detection, if 
0000316E                           259  *-------------------------------------------------------
0000316E                           260  collision:
0000316E  123C 0064                261      move.b  #mine_loc,D1
00003172  B27C 0064                262      cmp     #100,D1 is( x == 100)?
00003176  6600 0010                263      bne     collision_miss if x is equal to 100, then hit
0000317A                           264  collision_hit:
0000317A                           265      *hit
0000317A  43F9 00003387            266      lea     hit_msg,A1
00003180  303C 000E                267      move    #14,D0
00003184  4E4F                     268      trap    #15
00003186  4E75                     269      rts
00003188                           270      
00003188                           271  collision_miss:
00003188                           272      *miss
00003188  43F9 0000338F            273      lea     miss_msg,A1
0000318E  303C 000E                274      move    #14,D0
00003192  4E4F                     275      trap    #15
00003194  4E75                     276      rts
00003196                           277  
00003196                           278  *-------------------------------------------------------
00003196                           279  *--------------------------Loop-------------------------
00003196                           280  *-------------------------------------------------------
00003196                           281  loop:
00003196  163C 0005                282      move.b  #5, D3 loop counter D3=5
0000319A                           283  next:
0000319A  43F9 00003395            284      lea     loop_msg,A1
000031A0  103C 000E                285      move.b  #14,D0
000031A4  4E4F                     286      trap    #15
000031A6  5343                     287      sub     #1,D3   decrement loop counter
000031A8  66F0                     288      bne     next    repeat until D0=0
000031AA                           289  
000031AA                           290  *-------------------------------------------------------
000031AA                           291  *------------------Screen Decoration--------------------
000031AA                           292  *-------------------------------------------------------
000031AA                           293  decorate:
000031AA  163C 003C                294      move.b  #60, D3
000031AE  6100 0046                295      bsr     endl
000031B2                           296  out:
000031B2  43F9 00003395            297      lea     loop_msg,A1
000031B8  103C 000E                298      move.b  #14,D0
000031BC  4E4F                     299      trap    #15
000031BE  5343                     300      sub     #1,D3   decrement loop counter
000031C0  66F0                     301      bne     out     repeat until D0=0
000031C2  6100 0032                302      bsr     endl
000031C6  4E75                     303      rts
000031C8                           304      
000031C8                           305  clear_screen: 
000031C8  103C 000B                306      move.b  #11,D0      clear screen
000031CC  323C FF00                307      move.w  #$ff00,D1
000031D0  4E4F                     308      trap    #15
000031D2  4E75                     309      rts
000031D4                           310  *-------------------------------------------------------
000031D4                           311  *------------------------Replay-------------------------
000031D4                           312  *-------------------------------------------------------
000031D4                           313  replay:
000031D4  6100 0020                314      bsr     endl
000031D8  43F9 00003397            315      lea     replay_msg,A1
000031DE  103C 000E                316      move.b  #14,D0
000031E2  4E4F                     317      trap    #15
000031E4                           318      
000031E4  103C 0004                319      move.b  #4,D0
000031E8  4E4F                     320      trap    #15
000031EA                           321  
000031EA  B27C 0000                322      cmp     #exit,D1
000031EE  6700 FE16                323      beq     end         if SR Z register contains 1 beq => Branch Equals
000031F2  6100 FE3E                324      bsr     gameloop
000031F6                           325  
000031F6                           326  endl:
000031F6  48E7 8040                327      movem.l D0/A1,-(A7)
000031FA  303C 000E                328      move    #14,D0
000031FE  43F9 0000320C            329      lea     crlf,A1
00003204  4E4F                     330      trap    #15
00003206  4CDF 0201                331      movem.l (A7)+,D0/A1
0000320A  4E75                     332      rts
0000320C                           333      
0000320C                           334  *-------------------------------------------------------
0000320C                           335  *-------------------Data Declarations--------------------
0000320C                           336  *-------------------------------------------------------
0000320C                           337  
0000320C= 0D 0A 00                 338  crlf:           dc.b    $0D,$0A,0
0000320F= 2A 2A 2A 2A 2A 2A ...    339  welcome_msg:    dc.b    '************************************************************'
0000324B= 0D 0A                    340                  dc.b    $0D,$0A
0000324D= 43 61 73 74 6C 65 ...    341                  dc.b    'Castle game'
00003258= 0D 0A                    342                  dc.b    $0D,$0A
0000325A= 2A 2A 2A 2A 2A 2A ...    343                  dc.b    '************************************************************'
00003296= 0D 0A 00                 344                  dc.b    $0D,$0A,0
00003299= 46 65 65 64 20 6C ...    345  feed_msg:       dc.b    'Feed load (each horse needs at least 100 units of feed)'
000032D0= 0D 0A                    346                  dc.b    $0D,$0A
000032D2= 73 74 61 72 74 69 ...    347                  dc.b    'starting feed load : ',0
000032E8= 4E 75 6D 62 65 72 ...    348  horses_msg:     dc.b    'Number of horses : ',0
000032FC= 4F 6E 65 20 54 68 ...    349  distance_msg:   dc.b    'One Third speed 20 units remain for manuvouirs) horses '
00003333= 0D 0A                    350                  dc.b    $0D,$0A
00003335= 48 6F 72 73 65 73 ...    351                  dc.b    'Horses without feed are lost.'
00003352= 0D 0A                    352                  dc.b    $0D,$0A
00003354= 6D 69 73 73 69 6F ...    353                  dc.b    'mission distance : ',0
00003368= 73 74 61 72 74 69 ...    354  soldiers_msg:   dc.b    'starting number of soldiers : ',0
00003387                           355  
00003387= 53 74 72 69 6B 65 ...    356  hit_msg:        dc.b    'Strike!',0
0000338F= 4D 69 73 73 21 00        357  miss_msg:       dc.b    'Miss!',0
00003395= 2E 00                    358  loop_msg:       dc.b    '.',0
00003397= 45 6E 74 65 72 20 ...    359  replay_msg:     dc.b    'Enter 0 to Quit any other number to replay : ',0
000033C5= 53 63 6F 72 65 20 ...    360  hud_msg:        dc.b    'Score : ',0
000033CE                           361  
000033CE                           362  health:     ds.w    1
000033D0                           363  score:      ds.w    1 reserve space for score
000033D2                           364  
000033D2                           365      end start

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
CLEAR_SCREEN        31C8
COLLISION           316E
COLLISION_HIT       317A
COLLISION_MISS      3188
CRLF                320C
DECORATE            31AA
DISTANCE            30DC
DISTANCE_MSG        32FC
DISTANCE_TO_MISSION  32
DRAW                3070
END                 3006
ENDL                31F6
EXIT                0
FEED                3084
FEED_MSG            3299
GAME                3000
GAMELOOP            3032
GAMEPLAY            3134
HEALTH              33CE
HIT_MSG             3387
HIT_POINT           5
HORSES              30B0
HORSES_MSG          32E8
HUD                 314C
HUD_MSG             33C5
INPUT               3020
LOOP                3196
LOOP_MSG            3395
MAX_CHARGE          5
MAX_HORSES          9
MINE_LOC            64
MIN_CHARGE          1
MIN_FEED            A
MIN_HORSES          1
MIN_SOLDIER         6
MISS_MSG            338F
MISS_POINT          8
NEXT                319A
OUT                 31B2
PLAYERS_CASH        3E8
PLAYERS_FEED        64
PLAYERS_HORSES      5
PLAYERS_SOLDIER     A
REPLAY              31D4
REPLAY_MSG          3397
SCORE               33D0
SOLDIERS            3108
SOLDIERS_MSG        3368
START               1000
UPDATE              305C
WELCOME             300A
WELCOME_MSG         320F
